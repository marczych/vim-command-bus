#!/bin/bash

set -euo pipefail

function get_event_directory {
    echo "${TMPDIR:-/tmp/}"
}

function get_event_path {
    local event; event="$1"
    echo "$(get_event_directory)/vim-command-bus_${event}"
}

function main {
    local event; event="${VIM_COMMAND_BUS_EVENT:-default}"
    local event_path; event_path="$(get_event_path "$event")"
    local run_initial; run_initial="${VIM_COMMAND_BUS_RUN_INITIAL:-true}"

    # The fswatch command doesn't fail if the file doesn't exist but it doesn't
    # work when the file is eventually created.
    if ! [ -f "$event_path" ]; then
        echo Event \'"$event"\' not found! 1>&2
        exit 1
    fi

    # Run the command immediately if requested.
    if [[ "$run_initial" == true ]]; then
        # Don't exit if this fails.
        "$@" || true
    fi

    # PlatformSpecific appears to be an event that is fired exactly once for
    # every file change.
    #
    # - Not specifying any events worked on MacOS but triggered 3 times on
    #   Ubuntu 14.04.
    # - Specifying Updated worked on Ubuntu 14.04 but didn't trigger at all on
    #   MacOS.
    fswatch --event PlatformSpecific "$event_path" | xargs -n1 -I {} "$@"
}

main "$@"
